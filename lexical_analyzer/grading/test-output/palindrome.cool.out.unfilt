#name "./palindrome.cool"
#1 CLASS
#1 OBJECTID Main
#1 INHERITS
#1 OBJECTID IO
#1 '{'
#2 TYPEID pal
#2 '('
#2 TYPEID s
#2 ':'
#2 OBJECTID String
#2 ')'
#2 ':'
#2 OBJECTID Bool
#2 '{'
#3 IF
#3 TYPEID s
#3 '.'
#3 TYPEID length
#3 '('
#3 ')'
#3 '='
#3 INT_CONST 0
#4 THEN
#4 BOOL_CONST true
#5 ELSE
#5 IF
#5 TYPEID s
#5 '.'
#5 TYPEID length
#5 '('
#5 ')'
#5 '='
#5 INT_CONST 1
#6 THEN
#6 BOOL_CONST true
#7 ELSE
#7 IF
#7 TYPEID s
#7 '.'
#7 TYPEID substr
#7 '('
#7 INT_CONST 0
#7 ','
#7 INT_CONST 1
#7 ')'
#7 '='
#7 TYPEID s
#7 '.'
#7 TYPEID substr
#7 '('
#7 TYPEID s
#7 '.'
#7 TYPEID length
#7 '('
#7 ')'
#7 '-'
#7 INT_CONST 1
#7 ','
#7 INT_CONST 1
#7 ')'
#8 THEN
#8 TYPEID pal
#8 '('
#8 TYPEID s
#8 '.'
#8 TYPEID substr
#8 '('
#8 INT_CONST 1
#8 ','
#8 TYPEID s
#8 '.'
#8 TYPEID length
#8 '('
#8 ')'
#8 '-'
#8 INT_CONST 2
#8 ')'
#8 ')'
#9 ELSE
#9 BOOL_CONST false
#10 FI
#10 FI
#10 FI
#11 '}'
#11 ';'
#13 TYPEID i
#13 ':'
#13 OBJECTID Int
#13 ';'
#15 TYPEID main
#15 '('
#15 ')'
#15 ':'
#15 OBJECTID SELF_TYPE
#15 '{'
#16 '{'
#17 TYPEID i
#17 ASSIGN
#17 '~'
#17 INT_CONST 1
#17 ';'
#18 TYPEID out_string
#18 '('
#18 STR_CONST "enter a string\\n"
#18 ')'
#18 ';'
#19 IF
#19 TYPEID pal
#19 '('
#19 TYPEID in_string
#19 '('
#19 ')'
#19 ')'
#20 THEN
#20 TYPEID out_string
#20 '('
#20 STR_CONST "that was a palindrome\\n"
#20 ')'
#21 ELSE
#21 TYPEID out_string
#21 '('
#21 STR_CONST "that was not a palindrome\\n"
#21 ')'
#22 FI
#22 ';'
#23 '}'
#24 '}'
#24 ';'
#25 '}'
#25 ';'
