Terminals unused in grammar

   ELSE
   FI
   IF
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   ERROR
   '+'
   '-'
   '*'
   '/'


State 49 conflicts: 3 shift/reduce
State 51 conflicts: 3 shift/reduce
State 55 conflicts: 3 shift/reduce
State 61 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature_list feature

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID ':' TYPEID optional_Assignment

   10 optional_Assignment: /* empty */
   11                    | ASSIGN expr

   12 formal_list: formal
   13            | formal ',' formal_list

   14 formal: OBJECTID ':' TYPEID

   15 let_ids_opt: let_id_opt let_ids_opt
   16            | /* empty */

   17 let_id_opt: ',' OBJECTID ':' TYPEID let_init_opt

   18 let_init_opt: ASSIGN expr
   19             | /* empty */

   20 expr: OBJECTID ASSIGN expr
   21     | LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr
   22     | STR_CONST
   23     | INT_CONST
   24     | OBJECTID
   25     | '(' expr ')'
   26     | expr '=' expr
   27     | expr LE expr
   28     | expr '<' expr
   29     | NOT expr
   30     | '~' expr
   31     | BOOL_CONST
   32     | ISVOID expr
   33     | NEW OBJECTID
   34     | '{' expr_list '}'

   35 expr_list: expr ';'
   36          | expr ';' expr_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 25
')' (41) 8 25
'*' (42)
'+' (43)
',' (44) 13 17
'-' (45)
'/' (47)
':' (58) 8 9 14 17 21
';' (59) 4 5 35 36
'<' (60) 28
'=' (61) 26
'{' (123) 4 5 8 34
'}' (125) 4 5 8 34
'~' (126) 30
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262) 21
INHERITS (263) 5
LET (264) 21
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273) 33
ISVOID (274) 32
STR_CONST (275) 22
INT_CONST (276) 23
BOOL_CONST (277) 31
TYPEID (278) 4 5 8 9 14 17 21
OBJECTID (279) 8 9 14 17 20 21 24 33
ASSIGN (280) 11 18 20
NOT (281) 29
LE (282) 27
ERROR (283)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
class_list (45)
    on left: 2 3, on right: 1 3
class (46)
    on left: 4 5, on right: 2 3
feature_list (47)
    on left: 6 7, on right: 4 5 7
feature (48)
    on left: 8 9, on right: 7
optional_Assignment (49)
    on left: 10 11, on right: 9
formal_list (50)
    on left: 12 13, on right: 8 13
formal (51)
    on left: 14, on right: 12 13
let_ids_opt (52)
    on left: 15 16, on right: 15 21
let_id_opt (53)
    on left: 17, on right: 15
let_init_opt (54)
    on left: 18 19, on right: 17 21
expr (55)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34, on right:
    8 11 18 20 21 25 26 27 28 29 30 32 35 36
expr_list (56)
    on left: 35 36, on right: 34 36


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 11


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 12


state 11

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 14

    feature  go to state 15


state 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 16


state 13

    8 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID . ':' TYPEID optional_Assignment

    '('  shift, and go to state 17
    ':'  shift, and go to state 18


state 14

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 19


state 15

    7 feature_list: feature_list feature .

    $default  reduce using rule 7 (feature_list)


state 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 15


state 17

    8 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 21

    formal_list  go to state 22
    formal       go to state 23


state 18

    9 feature: OBJECTID ':' . TYPEID optional_Assignment

    TYPEID  shift, and go to state 24


state 19

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 21

   14 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 26


state 22

    8 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'

    ')'  shift, and go to state 27


state 23

   12 formal_list: formal .
   13            | formal . ',' formal_list

    ','  shift, and go to state 28

    $default  reduce using rule 12 (formal_list)


state 24

    9 feature: OBJECTID ':' TYPEID . optional_Assignment

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 10 (optional_Assignment)

    optional_Assignment  go to state 30


state 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 26

   14 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 31


state 27

    8 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 32


state 28

   13 formal_list: formal ',' . formal_list

    OBJECTID  shift, and go to state 21

    formal_list  go to state 33
    formal       go to state 23


state 29

   11 optional_Assignment: ASSIGN . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 45


state 30

    9 feature: OBJECTID ':' TYPEID optional_Assignment .

    $default  reduce using rule 9 (feature)


state 31

   14 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 14 (formal)


state 32

    8 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 46


state 33

   13 formal_list: formal ',' formal_list .

    $default  reduce using rule 13 (formal_list)


state 34

   21 expr: LET . OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr

    OBJECTID  shift, and go to state 47


state 35

   33 expr: NEW . OBJECTID

    OBJECTID  shift, and go to state 48


state 36

   32 expr: ISVOID . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 49


state 37

   22 expr: STR_CONST .

    $default  reduce using rule 22 (expr)


state 38

   23 expr: INT_CONST .

    $default  reduce using rule 23 (expr)


state 39

   31 expr: BOOL_CONST .

    $default  reduce using rule 31 (expr)


state 40

   20 expr: OBJECTID . ASSIGN expr
   24     | OBJECTID .

    ASSIGN  shift, and go to state 50

    $default  reduce using rule 24 (expr)


state 41

   29 expr: NOT . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 51


state 42

   34 expr: '{' . expr_list '}'

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr       go to state 52
    expr_list  go to state 53


state 43

   25 expr: '(' . expr ')'

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 54


state 44

   30 expr: '~' . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 55


state 45

   11 optional_Assignment: ASSIGN expr .
   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    $default  reduce using rule 11 (optional_Assignment)


state 46

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 59


state 47

   21 expr: LET OBJECTID . ':' TYPEID let_init_opt let_ids_opt IN expr

    ':'  shift, and go to state 60


state 48

   33 expr: NEW OBJECTID .

    $default  reduce using rule 33 (expr)


state 49

   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr
   32     | ISVOID expr .

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    LE        [reduce using rule 32 (expr)]
    '<'       [reduce using rule 32 (expr)]
    '='       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


state 50

   20 expr: OBJECTID ASSIGN . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 61


state 51

   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr
   29     | NOT expr .

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    LE        [reduce using rule 29 (expr)]
    '<'       [reduce using rule 29 (expr)]
    '='       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


state 52

   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr
   35 expr_list: expr . ';'
   36          | expr . ';' expr_list

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58
    ';'  shift, and go to state 62


state 53

   34 expr: '{' expr_list . '}'

    '}'  shift, and go to state 63


state 54

   25 expr: '(' expr . ')'
   26     | expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58
    ')'  shift, and go to state 64


state 55

   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr
   30     | '~' expr .

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    LE        [reduce using rule 30 (expr)]
    '<'       [reduce using rule 30 (expr)]
    '='       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


state 56

   27 expr: expr LE . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 65


state 57

   28 expr: expr '<' . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 66


state 58

   26 expr: expr '=' . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 67


state 59

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 68


state 60

   21 expr: LET OBJECTID ':' . TYPEID let_init_opt let_ids_opt IN expr

    TYPEID  shift, and go to state 69


state 61

   20 expr: OBJECTID ASSIGN expr .
   26     | expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    LE        [reduce using rule 20 (expr)]
    '<'       [reduce using rule 20 (expr)]
    '='       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 62

   35 expr_list: expr ';' .
   36          | expr ';' . expr_list

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    $default  reduce using rule 35 (expr_list)

    expr       go to state 52
    expr_list  go to state 70


state 63

   34 expr: '{' expr_list '}' .

    $default  reduce using rule 34 (expr)


state 64

   25 expr: '(' expr ')' .

    $default  reduce using rule 25 (expr)


state 65

   26 expr: expr . '=' expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . '<' expr

    $default  reduce using rule 27 (expr)


state 66

   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr
   28     | expr '<' expr .

    $default  reduce using rule 28 (expr)


state 67

   26 expr: expr . '=' expr
   26     | expr '=' expr .
   27     | expr . LE expr
   28     | expr . '<' expr

    $default  reduce using rule 26 (expr)


state 68

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58
    '}'  shift, and go to state 71


state 69

   21 expr: LET OBJECTID ':' TYPEID . let_init_opt let_ids_opt IN expr

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 19 (let_init_opt)

    let_init_opt  go to state 73


state 70

   36 expr_list: expr ';' expr_list .

    $default  reduce using rule 36 (expr_list)


state 71

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 8 (feature)


state 72

   18 let_init_opt: ASSIGN . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 74


state 73

   21 expr: LET OBJECTID ':' TYPEID let_init_opt . let_ids_opt IN expr

    ','  shift, and go to state 75

    $default  reduce using rule 16 (let_ids_opt)

    let_ids_opt  go to state 76
    let_id_opt   go to state 77


state 74

   18 let_init_opt: ASSIGN expr .
   26 expr: expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    LE   shift, and go to state 56
    '<'  shift, and go to state 57
    '='  shift, and go to state 58

    $default  reduce using rule 18 (let_init_opt)


state 75

   17 let_id_opt: ',' . OBJECTID ':' TYPEID let_init_opt

    OBJECTID  shift, and go to state 78


state 76

   21 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt . IN expr

    IN  shift, and go to state 79


state 77

   15 let_ids_opt: let_id_opt . let_ids_opt

    ','  shift, and go to state 75

    $default  reduce using rule 16 (let_ids_opt)

    let_ids_opt  go to state 80
    let_id_opt   go to state 77


state 78

   17 let_id_opt: ',' OBJECTID . ':' TYPEID let_init_opt

    ':'  shift, and go to state 81


state 79

   21 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN . expr

    LET         shift, and go to state 34
    NEW         shift, and go to state 35
    ISVOID      shift, and go to state 36
    STR_CONST   shift, and go to state 37
    INT_CONST   shift, and go to state 38
    BOOL_CONST  shift, and go to state 39
    OBJECTID    shift, and go to state 40
    NOT         shift, and go to state 41
    '{'         shift, and go to state 42
    '('         shift, and go to state 43
    '~'         shift, and go to state 44

    expr  go to state 82


state 80

   15 let_ids_opt: let_id_opt let_ids_opt .

    $default  reduce using rule 15 (let_ids_opt)


state 81

   17 let_id_opt: ',' OBJECTID ':' . TYPEID let_init_opt

    TYPEID  shift, and go to state 83


state 82

   21 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr .
   26     | expr . '=' expr
   27     | expr . LE expr
   28     | expr . '<' expr

    $default  reduce using rule 21 (expr)


state 83

   17 let_id_opt: ',' OBJECTID ':' TYPEID . let_init_opt

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 19 (let_init_opt)

    let_init_opt  go to state 84


state 84

   17 let_id_opt: ',' OBJECTID ':' TYPEID let_init_opt .

    $default  reduce using rule 17 (let_id_opt)
