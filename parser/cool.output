Terminals unused in grammar

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   ERROR
   '+'
   '-'
   '*'
   '/'


State 47 conflicts: 3 shift/reduce
State 49 conflicts: 3 shift/reduce
State 53 conflicts: 3 shift/reduce
State 58 conflicts: 3 shift/reduce
State 62 conflicts: 3 shift/reduce
State 63 conflicts: 3 shift/reduce
State 64 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature_list feature

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID ':' TYPEID optional_Assignment

   10 optional_Assignment: /* empty */
   11                    | ASSIGN expr

   12 formal_list: formal
   13            | formal ',' formal_list

   14 formal: OBJECTID ':' TYPEID

   15 expr: OBJECTID ASSIGN expr
   16     | STR_CONST
   17     | INT_CONST
   18     | OBJECTID
   19     | '(' expr ')'
   20     | expr '=' expr
   21     | expr LE expr
   22     | expr '<' expr
   23     | NOT expr
   24     | '~' expr
   25     | BOOL_CONST
   26     | ISVOID expr
   27     | NEW OBJECTID
   28     | '{' expr_list '}'

   29 expr_list: expr
   30          | expr expr_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 19
')' (41) 8 19
'*' (42)
'+' (43)
',' (44) 13
'-' (45)
'/' (47)
':' (58) 8 9 14
';' (59) 4 5
'<' (60) 22
'=' (61) 20
'{' (123) 4 5 8 28
'}' (125) 4 5 8 28
'~' (126) 24
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273) 27
ISVOID (274) 26
STR_CONST (275) 16
INT_CONST (276) 17
BOOL_CONST (277) 25
TYPEID (278) 4 5 8 9 14
OBJECTID (279) 8 9 14 15 18 27
ASSIGN (280) 11 15
NOT (281) 23
LE (282) 21
ERROR (283)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
class_list (45)
    on left: 2 3, on right: 1 3
class (46)
    on left: 4 5, on right: 2 3
feature_list (47)
    on left: 6 7, on right: 4 5 7
feature (48)
    on left: 8 9, on right: 7
optional_Assignment (49)
    on left: 10 11, on right: 9
formal_list (50)
    on left: 12 13, on right: 8 13
formal (51)
    on left: 14, on right: 12 13
expr (52)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 8
    11 15 19 20 21 22 23 24 26 29 30
expr_list (53)
    on left: 29 30, on right: 28 30


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 11


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 12


state 11

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 14

    feature  go to state 15


state 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 16


state 13

    8 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID . ':' TYPEID optional_Assignment

    '('  shift, and go to state 17
    ':'  shift, and go to state 18


state 14

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 19


state 15

    7 feature_list: feature_list feature .

    $default  reduce using rule 7 (feature_list)


state 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 15


state 17

    8 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 21

    formal_list  go to state 22
    formal       go to state 23


state 18

    9 feature: OBJECTID ':' . TYPEID optional_Assignment

    TYPEID  shift, and go to state 24


state 19

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 21

   14 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 26


state 22

    8 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'

    ')'  shift, and go to state 27


state 23

   12 formal_list: formal .
   13            | formal . ',' formal_list

    ','  shift, and go to state 28

    $default  reduce using rule 12 (formal_list)


state 24

    9 feature: OBJECTID ':' TYPEID . optional_Assignment

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 10 (optional_Assignment)

    optional_Assignment  go to state 30


state 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 26

   14 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 31


state 27

    8 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 32


state 28

   13 formal_list: formal ',' . formal_list

    OBJECTID  shift, and go to state 21

    formal_list  go to state 33
    formal       go to state 23


state 29

   11 optional_Assignment: ASSIGN . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 44


state 30

    9 feature: OBJECTID ':' TYPEID optional_Assignment .

    $default  reduce using rule 9 (feature)


state 31

   14 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 14 (formal)


state 32

    8 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 45


state 33

   13 formal_list: formal ',' formal_list .

    $default  reduce using rule 13 (formal_list)


state 34

   27 expr: NEW . OBJECTID

    OBJECTID  shift, and go to state 46


state 35

   26 expr: ISVOID . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 47


state 36

   16 expr: STR_CONST .

    $default  reduce using rule 16 (expr)


state 37

   17 expr: INT_CONST .

    $default  reduce using rule 17 (expr)


state 38

   25 expr: BOOL_CONST .

    $default  reduce using rule 25 (expr)


state 39

   15 expr: OBJECTID . ASSIGN expr
   18     | OBJECTID .

    ASSIGN  shift, and go to state 48

    $default  reduce using rule 18 (expr)


state 40

   23 expr: NOT . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 49


state 41

   28 expr: '{' . expr_list '}'

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr       go to state 50
    expr_list  go to state 51


state 42

   19 expr: '(' . expr ')'

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 52


state 43

   24 expr: '~' . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 53


state 44

   11 optional_Assignment: ASSIGN expr .
   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    $default  reduce using rule 11 (optional_Assignment)


state 45

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 57


state 46

   27 expr: NEW OBJECTID .

    $default  reduce using rule 27 (expr)


state 47

   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr
   26     | ISVOID expr .

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 26 (expr)]
    '='       [reduce using rule 26 (expr)]
    '<'       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


state 48

   15 expr: OBJECTID ASSIGN . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 58


state 49

   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr
   23     | NOT expr .

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 23 (expr)]
    '='       [reduce using rule 23 (expr)]
    '<'       [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


state 50

   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr
   29 expr_list: expr .
   30          | expr . expr_list

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    LE          shift, and go to state 54
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '='         shift, and go to state 55
    '<'         shift, and go to state 56
    '~'         shift, and go to state 43

    $default  reduce using rule 29 (expr_list)

    expr       go to state 50
    expr_list  go to state 59


state 51

   28 expr: '{' expr_list . '}'

    '}'  shift, and go to state 60


state 52

   19 expr: '(' expr . ')'
   20     | expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr

    LE   shift, and go to state 54
    ')'  shift, and go to state 61
    '='  shift, and go to state 55
    '<'  shift, and go to state 56


state 53

   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr
   24     | '~' expr .

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 24 (expr)]
    '='       [reduce using rule 24 (expr)]
    '<'       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


state 54

   21 expr: expr LE . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 62


state 55

   20 expr: expr '=' . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 63


state 56

   22 expr: expr '<' . expr

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 64


state 57

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    NEW         shift, and go to state 34
    ISVOID      shift, and go to state 35
    STR_CONST   shift, and go to state 36
    INT_CONST   shift, and go to state 37
    BOOL_CONST  shift, and go to state 38
    OBJECTID    shift, and go to state 39
    NOT         shift, and go to state 40
    '{'         shift, and go to state 41
    '('         shift, and go to state 42
    '~'         shift, and go to state 43

    expr  go to state 65


state 58

   15 expr: OBJECTID ASSIGN expr .
   20     | expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 15 (expr)]
    '='       [reduce using rule 15 (expr)]
    '<'       [reduce using rule 15 (expr)]
    $default  reduce using rule 15 (expr)


state 59

   30 expr_list: expr expr_list .

    $default  reduce using rule 30 (expr_list)


state 60

   28 expr: '{' expr_list '}' .

    $default  reduce using rule 28 (expr)


state 61

   19 expr: '(' expr ')' .

    $default  reduce using rule 19 (expr)


state 62

   20 expr: expr . '=' expr
   21     | expr . LE expr
   21     | expr LE expr .
   22     | expr . '<' expr

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 21 (expr)]
    '='       [reduce using rule 21 (expr)]
    '<'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


state 63

   20 expr: expr . '=' expr
   20     | expr '=' expr .
   21     | expr . LE expr
   22     | expr . '<' expr

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 20 (expr)]
    '='       [reduce using rule 20 (expr)]
    '<'       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 64

   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr
   22     | expr '<' expr .

    LE   shift, and go to state 54
    '='  shift, and go to state 55
    '<'  shift, and go to state 56

    LE        [reduce using rule 22 (expr)]
    '='       [reduce using rule 22 (expr)]
    '<'       [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


state 65

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   20 expr: expr . '=' expr
   21     | expr . LE expr
   22     | expr . '<' expr

    LE   shift, and go to state 54
    '}'  shift, and go to state 66
    '='  shift, and go to state 55
    '<'  shift, and go to state 56


state 66

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 8 (feature)
