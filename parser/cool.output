Terminals unused in grammar

   DARROW
   ERROR
   '+'
   '-'
   '*'
   '/'


State 55 conflicts: 3 shift/reduce
State 57 conflicts: 3 shift/reduce
State 61 conflicts: 3 shift/reduce
State 70 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: /* empty */
    7             | feature_list feature

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID ':' TYPEID optional_Assignment

   10 optional_Assignment: /* empty */
   11                    | ASSIGN expr

   12 formal_list: formal
   13            | formal ',' formal_list

   14 formal: OBJECTID ':' TYPEID

   15 let_ids_opt: let_id_opt let_ids_opt
   16            | /* empty */

   17 let_id_opt: ',' OBJECTID ':' TYPEID let_init_opt

   18 let_init_opt: ASSIGN expr
   19             | /* empty */

   20 case_labels: OBJECTID ':' TYPEID '=' expr ';' case_labels
   21            | /* empty */

   22 expr: OBJECTID ASSIGN expr
   23     | LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr
   24     | CASE expr OF case_labels ESAC
   25     | WHILE expr LOOP expr POOL
   26     | IF expr THEN expr ELSE expr FI
   27     | STR_CONST
   28     | INT_CONST
   29     | OBJECTID
   30     | '(' expr ')'
   31     | expr '=' expr
   32     | expr LE expr
   33     | expr '<' expr
   34     | NOT expr
   35     | '~' expr
   36     | BOOL_CONST
   37     | ISVOID expr
   38     | NEW OBJECTID
   39     | '{' expr_list '}'

   40 expr_list: expr ';'
   41          | expr ';' expr_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 30
')' (41) 8 30
'*' (42)
'+' (43)
',' (44) 13 17
'-' (45)
'/' (47)
':' (58) 8 9 14 17 20 23
';' (59) 4 5 20 40 41
'<' (60) 33
'=' (61) 20 31
'{' (123) 4 5 8 39
'}' (125) 4 5 8 39
'~' (126) 35
error (256)
CLASS (258) 4 5
ELSE (259) 26
FI (260) 26
IF (261) 26
IN (262) 23
INHERITS (263) 5
LET (264) 23
LOOP (265) 25
POOL (266) 25
THEN (267) 26
WHILE (268) 25
CASE (269) 24
ESAC (270) 24
OF (271) 24
DARROW (272)
NEW (273) 38
ISVOID (274) 37
STR_CONST (275) 27
INT_CONST (276) 28
BOOL_CONST (277) 36
TYPEID (278) 4 5 8 9 14 17 20 23
OBJECTID (279) 8 9 14 17 20 22 23 29 38
ASSIGN (280) 11 18 22
NOT (281) 34
LE (282) 32
ERROR (283)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
class_list (45)
    on left: 2 3, on right: 1 3
class (46)
    on left: 4 5, on right: 2 3
feature_list (47)
    on left: 6 7, on right: 4 5 7
feature (48)
    on left: 8 9, on right: 7
optional_Assignment (49)
    on left: 10 11, on right: 9
formal_list (50)
    on left: 12 13, on right: 8 13
formal (51)
    on left: 14, on right: 12 13
let_ids_opt (52)
    on left: 15 16, on right: 15 23
let_id_opt (53)
    on left: 17, on right: 15
let_init_opt (54)
    on left: 18 19, on right: 17 23
case_labels (55)
    on left: 20 21, on right: 20 24
expr (56)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 8 11 18 20 22 23 24 25 26 30 31 32 33 34 35 37 40 41
expr_list (57)
    on left: 40 41, on right: 39 41


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 11


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 12


state 11

    4 class: CLASS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 14

    feature  go to state 15


state 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 16


state 13

    8 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expr '}'
    9        | OBJECTID . ':' TYPEID optional_Assignment

    '('  shift, and go to state 17
    ':'  shift, and go to state 18


state 14

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 19


state 15

    7 feature_list: feature_list feature .

    $default  reduce using rule 7 (feature_list)


state 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    7 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 15


state 17

    8 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 21

    formal_list  go to state 22
    formal       go to state 23


state 18

    9 feature: OBJECTID ':' . TYPEID optional_Assignment

    TYPEID  shift, and go to state 24


state 19

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


state 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 25


state 21

   14 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 26


state 22

    8 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expr '}'

    ')'  shift, and go to state 27


state 23

   12 formal_list: formal .
   13            | formal . ',' formal_list

    ','  shift, and go to state 28

    $default  reduce using rule 12 (formal_list)


state 24

    9 feature: OBJECTID ':' TYPEID . optional_Assignment

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 10 (optional_Assignment)

    optional_Assignment  go to state 30


state 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


state 26

   14 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 31


state 27

    8 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 32


state 28

   13 formal_list: formal ',' . formal_list

    OBJECTID  shift, and go to state 21

    formal_list  go to state 33
    formal       go to state 23


state 29

   11 optional_Assignment: ASSIGN . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 48


state 30

    9 feature: OBJECTID ':' TYPEID optional_Assignment .

    $default  reduce using rule 9 (feature)


state 31

   14 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 14 (formal)


state 32

    8 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 49


state 33

   13 formal_list: formal ',' formal_list .

    $default  reduce using rule 13 (formal_list)


state 34

   26 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 50


state 35

   23 expr: LET . OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr

    OBJECTID  shift, and go to state 51


state 36

   25 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 52


state 37

   24 expr: CASE . expr OF case_labels ESAC

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 53


state 38

   38 expr: NEW . OBJECTID

    OBJECTID  shift, and go to state 54


state 39

   37 expr: ISVOID . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 55


state 40

   27 expr: STR_CONST .

    $default  reduce using rule 27 (expr)


state 41

   28 expr: INT_CONST .

    $default  reduce using rule 28 (expr)


state 42

   36 expr: BOOL_CONST .

    $default  reduce using rule 36 (expr)


state 43

   22 expr: OBJECTID . ASSIGN expr
   29     | OBJECTID .

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 29 (expr)


state 44

   34 expr: NOT . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 57


state 45

   39 expr: '{' . expr_list '}'

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr       go to state 58
    expr_list  go to state 59


state 46

   30 expr: '(' . expr ')'

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 60


state 47

   35 expr: '~' . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 61


state 48

   11 optional_Assignment: ASSIGN expr .
   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    $default  reduce using rule 11 (optional_Assignment)


state 49

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 65


state 50

   26 expr: IF expr . THEN expr ELSE expr FI
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    THEN  shift, and go to state 66
    LE    shift, and go to state 62
    '<'   shift, and go to state 63
    '='   shift, and go to state 64


state 51

   23 expr: LET OBJECTID . ':' TYPEID let_init_opt let_ids_opt IN expr

    ':'  shift, and go to state 67


state 52

   25 expr: WHILE expr . LOOP expr POOL
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LOOP  shift, and go to state 68
    LE    shift, and go to state 62
    '<'   shift, and go to state 63
    '='   shift, and go to state 64


state 53

   24 expr: CASE expr . OF case_labels ESAC
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    OF   shift, and go to state 69
    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64


state 54

   38 expr: NEW OBJECTID .

    $default  reduce using rule 38 (expr)


state 55

   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr
   37     | ISVOID expr .

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    LE        [reduce using rule 37 (expr)]
    '<'       [reduce using rule 37 (expr)]
    '='       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 56

   22 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 70


state 57

   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr
   34     | NOT expr .

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    LE        [reduce using rule 34 (expr)]
    '<'       [reduce using rule 34 (expr)]
    '='       [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


state 58

   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr
   40 expr_list: expr . ';'
   41          | expr . ';' expr_list

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64
    ';'  shift, and go to state 71


state 59

   39 expr: '{' expr_list . '}'

    '}'  shift, and go to state 72


state 60

   30 expr: '(' expr . ')'
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64
    ')'  shift, and go to state 73


state 61

   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr
   35     | '~' expr .

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    LE        [reduce using rule 35 (expr)]
    '<'       [reduce using rule 35 (expr)]
    '='       [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


state 62

   32 expr: expr LE . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 74


state 63

   33 expr: expr '<' . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 75


state 64

   31 expr: expr '=' . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 76


state 65

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 77


state 66

   26 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 78


state 67

   23 expr: LET OBJECTID ':' . TYPEID let_init_opt let_ids_opt IN expr

    TYPEID  shift, and go to state 79


state 68

   25 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 80


state 69

   24 expr: CASE expr OF . case_labels ESAC

    OBJECTID  shift, and go to state 81

    $default  reduce using rule 21 (case_labels)

    case_labels  go to state 82


state 70

   22 expr: OBJECTID ASSIGN expr .
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    LE        [reduce using rule 22 (expr)]
    '<'       [reduce using rule 22 (expr)]
    '='       [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


state 71

   40 expr_list: expr ';' .
   41          | expr ';' . expr_list

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    $default  reduce using rule 40 (expr_list)

    expr       go to state 58
    expr_list  go to state 83


state 72

   39 expr: '{' expr_list '}' .

    $default  reduce using rule 39 (expr)


state 73

   30 expr: '(' expr ')' .

    $default  reduce using rule 30 (expr)


state 74

   31 expr: expr . '=' expr
   32     | expr . LE expr
   32     | expr LE expr .
   33     | expr . '<' expr

    $default  reduce using rule 32 (expr)


state 75

   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr
   33     | expr '<' expr .

    $default  reduce using rule 33 (expr)


state 76

   31 expr: expr . '=' expr
   31     | expr '=' expr .
   32     | expr . LE expr
   33     | expr . '<' expr

    $default  reduce using rule 31 (expr)


state 77

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr . '}'
   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64
    '}'  shift, and go to state 84


state 78

   26 expr: IF expr THEN expr . ELSE expr FI
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    ELSE  shift, and go to state 85
    LE    shift, and go to state 62
    '<'   shift, and go to state 63
    '='   shift, and go to state 64


state 79

   23 expr: LET OBJECTID ':' TYPEID . let_init_opt let_ids_opt IN expr

    ASSIGN  shift, and go to state 86

    $default  reduce using rule 19 (let_init_opt)

    let_init_opt  go to state 87


state 80

   25 expr: WHILE expr LOOP expr . POOL
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    POOL  shift, and go to state 88
    LE    shift, and go to state 62
    '<'   shift, and go to state 63
    '='   shift, and go to state 64


state 81

   20 case_labels: OBJECTID . ':' TYPEID '=' expr ';' case_labels

    ':'  shift, and go to state 89


state 82

   24 expr: CASE expr OF case_labels . ESAC

    ESAC  shift, and go to state 90


state 83

   41 expr_list: expr ';' expr_list .

    $default  reduce using rule 41 (expr_list)


state 84

    8 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 8 (feature)


state 85

   26 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 91


state 86

   18 let_init_opt: ASSIGN . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 92


state 87

   23 expr: LET OBJECTID ':' TYPEID let_init_opt . let_ids_opt IN expr

    ','  shift, and go to state 93

    $default  reduce using rule 16 (let_ids_opt)

    let_ids_opt  go to state 94
    let_id_opt   go to state 95


state 88

   25 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 25 (expr)


state 89

   20 case_labels: OBJECTID ':' . TYPEID '=' expr ';' case_labels

    TYPEID  shift, and go to state 96


state 90

   24 expr: CASE expr OF case_labels ESAC .

    $default  reduce using rule 24 (expr)


state 91

   26 expr: IF expr THEN expr ELSE expr . FI
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    FI   shift, and go to state 97
    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64


state 92

   18 let_init_opt: ASSIGN expr .
   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64

    $default  reduce using rule 18 (let_init_opt)


state 93

   17 let_id_opt: ',' . OBJECTID ':' TYPEID let_init_opt

    OBJECTID  shift, and go to state 98


state 94

   23 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt . IN expr

    IN  shift, and go to state 99


state 95

   15 let_ids_opt: let_id_opt . let_ids_opt

    ','  shift, and go to state 93

    $default  reduce using rule 16 (let_ids_opt)

    let_ids_opt  go to state 100
    let_id_opt   go to state 95


state 96

   20 case_labels: OBJECTID ':' TYPEID . '=' expr ';' case_labels

    '='  shift, and go to state 101


state 97

   26 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 26 (expr)


state 98

   17 let_id_opt: ',' OBJECTID . ':' TYPEID let_init_opt

    ':'  shift, and go to state 102


state 99

   23 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN . expr

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 103


state 100

   15 let_ids_opt: let_id_opt let_ids_opt .

    $default  reduce using rule 15 (let_ids_opt)


state 101

   20 case_labels: OBJECTID ':' TYPEID '=' . expr ';' case_labels

    IF          shift, and go to state 34
    LET         shift, and go to state 35
    WHILE       shift, and go to state 36
    CASE        shift, and go to state 37
    NEW         shift, and go to state 38
    ISVOID      shift, and go to state 39
    STR_CONST   shift, and go to state 40
    INT_CONST   shift, and go to state 41
    BOOL_CONST  shift, and go to state 42
    OBJECTID    shift, and go to state 43
    NOT         shift, and go to state 44
    '{'         shift, and go to state 45
    '('         shift, and go to state 46
    '~'         shift, and go to state 47

    expr  go to state 104


state 102

   17 let_id_opt: ',' OBJECTID ':' . TYPEID let_init_opt

    TYPEID  shift, and go to state 105


state 103

   23 expr: LET OBJECTID ':' TYPEID let_init_opt let_ids_opt IN expr .
   31     | expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    $default  reduce using rule 23 (expr)


state 104

   20 case_labels: OBJECTID ':' TYPEID '=' expr . ';' case_labels
   31 expr: expr . '=' expr
   32     | expr . LE expr
   33     | expr . '<' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 63
    '='  shift, and go to state 64
    ';'  shift, and go to state 106


state 105

   17 let_id_opt: ',' OBJECTID ':' TYPEID . let_init_opt

    ASSIGN  shift, and go to state 86

    $default  reduce using rule 19 (let_init_opt)

    let_init_opt  go to state 107


state 106

   20 case_labels: OBJECTID ':' TYPEID '=' expr ';' . case_labels

    OBJECTID  shift, and go to state 81

    $default  reduce using rule 21 (case_labels)

    case_labels  go to state 108


state 107

   17 let_id_opt: ',' OBJECTID ':' TYPEID let_init_opt .

    $default  reduce using rule 17 (let_id_opt)


state 108

   20 case_labels: OBJECTID ':' TYPEID '=' expr ';' case_labels .

    $default  reduce using rule 20 (case_labels)
